import { NextResponse } from "next/server";
import nodemailer from "nodemailer";

;;
export async function POST(request: Request) {
    try {
        const body = await request.json();
        const { email } = body;

        if (!email) {
            return NextResponse.json({
                success: false,
                message: "Email address is required"
            }, { status: 400 });
        }

        console.log("Starting to send test email to:", email);

        // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
        const mockDevice = {
            device_name: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ü‡∏≠‡∏Å‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏≠‡∏ô",
            location: "‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏≠‡∏ô‡πÉ‡∏´‡∏ç‡πà",
            device_id: "TEST00123"
        };
        const mockDustLevel = 65.3;  // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Ñ‡πà‡∏≤‡∏ù‡∏∏‡πà‡∏ô
        const mockThreshold = 35.0;  // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÑ‡∏ß‡πâ

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á transporter
        const transporter = nodemailer.createTransport({
            host: process.env.SMTP_HOST || "smtp.gmail.com",
            port: Number(process.env.SMTP_PORT) || 465,
            secure: true, // port 465 ‡πÉ‡∏ä‡πâ secure: true
            auth: {
                user: process.env.SMTP_USER,
                pass: process.env.SMTP_PASS,
            },
        });

        // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
        const deviceName = mockDevice.device_name;
        const location = mockDevice.location || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á";
        
        // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏∏‡∏ô‡πÅ‡∏£‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡πà‡∏≤‡∏ù‡∏∏‡πà‡∏ô (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ó‡∏µ‡πà‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô)
        const dustSeverity = mockDustLevel > 50 ? 'critical' : (mockDustLevel > 30 ? 'warning' : 'moderate');
        
        // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏µ‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏∏‡∏ô‡πÅ‡∏£‡∏á
        const severityColors = {
            critical: '#d9534f',  // ‡∏™‡∏µ‡πÅ‡∏î‡∏á
            warning: '#f0ad4e',   // ‡∏™‡∏µ‡∏™‡πâ‡∏°
            moderate: '#5cb85c'   // ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß
        };
        
        const severityColor = severityColors[dustSeverity];

        // ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ó‡∏µ‡πà‡∏î‡∏π‡πÇ‡∏î‡∏î‡πÄ‡∏î‡πà‡∏ô‡πÅ‡∏•‡∏∞‡∏ó‡∏±‡∏ô‡∏™‡∏°‡∏±‡∏¢
        const info = await transporter.sendMail({
            from: `"‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®" <${process.env.SMTP_USER}>`,
            to: email,
            subject: `üö® ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏î‡πà‡∏ß‡∏ô: ‡∏Ñ‡πà‡∏≤‡∏ù‡∏∏‡πà‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á ${deviceName}`,
            html: `
                <div style="font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; max-width: 650px; margin: 0 auto; padding: 0; background-color: #f7f7f7;">
                    <!-- ‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß -->
                    <div style="background-color: ${severityColor}; padding: 20px; text-align: center; color: white; border-radius: 8px 8px 0 0;">
                        <h1 style="margin: 0; font-size: 28px;">‚ö†Ô∏è ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Ñ‡πà‡∏≤‡∏ù‡∏∏‡πà‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î</h1>
                    </div>
                    
                    <!-- ‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ -->
                    <div style="background-color: white; padding: 25px; border-left: 1px solid #ddd; border-right: 1px solid #ddd;">
                        <p style="font-size: 16px; line-height: 1.5; color: #333;">‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö‡∏ß‡πà‡∏≤‡∏Ñ‡πà‡∏≤‡∏ù‡∏∏‡πà‡∏ô‡πÉ‡∏ô‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡∏Ç‡∏≠‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ü‡∏≠‡∏Å‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì<span style="font-weight: bold; color: ${severityColor};">‡πÄ‡∏Å‡∏¥‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÑ‡∏ß‡πâ</span> ‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ:</p>
                        
                        <!-- ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå -->
                        <div style="background-color: #f9f9f9; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 5px solid ${severityColor};">
                            <table style="width: 100%; border-collapse: collapse;">
                                <tr>
                                    <td style="padding: 8px 0; width: 40%;"><strong>‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á:</strong></td>
                                    <td style="padding: 8px 0;">${deviceName}</td>
                                </tr>
                                <tr>
                                    <td style="padding: 8px 0;"><strong>‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà/‡∏´‡πâ‡∏≠‡∏á:</strong></td>
                                    <td style="padding: 8px 0;">${location}</td>
                                </tr>
                                <tr>
                                    <td style="padding: 8px 0;"><strong>‡∏Ñ‡πà‡∏≤‡∏ù‡∏∏‡πà‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:</strong></td>
                                    <td style="padding: 8px 0; font-weight: bold; color: ${severityColor}; font-size: 18px;">${mockDustLevel.toFixed(1)} ¬µg/m¬≥</td>
                                </tr>
                                <tr>
                                    <td style="padding: 8px 0;"><strong>‡∏Ñ‡πà‡∏≤‡∏ù‡∏∏‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î:</strong></td>
                                    <td style="padding: 8px 0;">${mockThreshold.toFixed(1)} ¬µg/m¬≥</td>
                                </tr>
                            </table>
                        </div>
                        
                        <!-- ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏Å‡∏à‡∏ß‡∏±‡∏î‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢‡πÜ -->
                        <div style="margin: 25px 0; background-color: #eeeeee; height: 30px; border-radius: 15px; overflow: hidden; position: relative;">
                            <div style="position: absolute; top: 0; left: 0; height: 100%; width: ${Math.min(100, (mockDustLevel / 100) * 100)}%; background: linear-gradient(to right, #5cb85c, ${severityColor}); transition: width 1s ease;"></div>
                            <div style="position: relative; text-align: center; line-height: 30px; color: white; font-weight: bold; text-shadow: 1px 1px 2px rgba(0,0,0,0.7);">PM 2.5: ${mockDustLevel.toFixed(1)} ¬µg/m¬≥</div>
                        </div>
                        
                        <!-- ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ -->
                        <div style="background-color: #e8f4fb; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 5px solid #3498db;">
                            <h3 style="margin-top: 0; color: #3498db;">‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏î‡∏Ñ‡πà‡∏≤‡∏ù‡∏∏‡πà‡∏ô</h3>
                            <ul style="padding-left: 20px; line-height: 1.6;">
                                <li><strong>‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏û‡∏±‡∏î‡∏•‡∏°</strong> - ‡∏õ‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏û‡∏±‡∏î‡∏•‡∏°‡∏Ç‡∏≠‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ü‡∏≠‡∏Å‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡πÉ‡∏´‡πâ‡∏™‡∏π‡∏á‡∏Ç‡∏∂‡πâ‡∏ô</li>
                                <li><strong>‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡πÅ‡∏•‡∏∞‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á</strong> - ‡∏•‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏´‡∏•‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ù‡∏∏‡πà‡∏ô‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å</li>
                                <li><strong>‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÅ‡∏ú‡πà‡∏ô‡∏Å‡∏£‡∏≠‡∏á</strong> - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÅ‡∏ú‡πà‡∏ô‡∏Å‡∏£‡∏≠‡∏á‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡∏Ç‡∏≠‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á</li>
                                <li><strong>‡∏•‡∏î‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Å‡∏≥‡πÄ‡∏ô‡∏¥‡∏î‡∏ù‡∏∏‡πà‡∏ô</strong> - ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏Å‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏¥‡∏î‡∏ù‡∏∏‡πà‡∏ô‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á ‡πÄ‡∏ä‡πà‡∏ô ‡∏Å‡∏≤‡∏£‡∏à‡∏∏‡∏î‡∏ò‡∏π‡∏õ ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏ó‡∏≠‡∏î/‡∏ú‡∏±‡∏î‡∏≠‡∏≤‡∏´‡∏≤‡∏£</li>
                            </ul>
                        </div>
                        
                        <!-- ‡∏õ‡∏∏‡πà‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÅ‡∏≠‡∏õ -->
                        <div style="text-align: center; margin: 30px 0;">
                            <a href="https://mm-air.online/devices" style="background-color: #3498db; color: white; padding: 12px 25px; text-decoration: none; border-radius: 5px; font-weight: bold; display: inline-block;">‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå</a>
                        </div>
                    </div>
                    
                    <!-- ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡πâ‡∏≤‡∏¢ -->
                    <div style="background-color: #f0f0f0; padding: 15px; text-align: center; border-radius: 0 0 8px 8px; border: 1px solid #ddd; border-top: none;">
                        <p style="color: #777; margin: 5px 0; font-size: 0.9em;">‡∏ô‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö</p>
                        <p style="color: #777; margin: 5px 0; font-size: 0.8em;">¬© 2025 MM-Air. All rights reserved.</p>
                    </div>
                </div>
            `,
        });
        
        console.log(`Email sent successfully. Message ID: ${info.messageId}`);
        
        return NextResponse.json({
            success: true,
            message: "Test email sent successfully",
            messageId: info.messageId
        });
    } catch (error) {
        console.error("Error sending test email:", error);
        return NextResponse.json({
            success: false,
            message: "Failed to send test email",
            error: String(error)
        }, { status: 500 });
    }
}